; ModuleID = 'fib.c'
source_filename = "fib.c"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx14.0.0"

@.str = private unnamed_addr constant [28 x i8] c"Enter the number of terms: \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"Fibonacci Series: %d, %d, \00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%d, \00", align 1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define i32 @main() #0 {                                                                     def     use     in              out
  %1 = alloca i32, align 4                                                                  %1              
  %2 = alloca i32, align 4                                                                  %2              
  %3 = alloca i32, align 4                                                                  %3              
  %4 = alloca i32, align 4                                                                  %4              
  %5 = alloca i32, align 4                                                                  %5              
  %6 = alloca i32, align 4                                                                  %6              
  store i32 0, ptr %1, align 4                                                                      %1      
  store i32 0, ptr %4, align 4                                                                      %4      
  store i32 1, ptr %5, align 4                                                                      %5      
  %7 = load i32, ptr %4, align 4                                                            %7      %4      
  %8 = load i32, ptr %5, align 4                                                            %8      %5      
  %9 = add nsw i32 %7, %8                                                                   %9      %7,%8   
  store i32 %9, ptr %6, align 4                                                                     %6,%9   
  %10 = call i32 (ptr, ...) @printf(ptr noundef @.str)                                      %10
  %11 = call i32 (ptr, ...) @scanf(ptr noundef @.str.1, ptr noundef %3)                     %11     %3      
  %12 = load i32, ptr %4, align 4                                                           %12     %4      
  %13 = load i32, ptr %5, align 4                                                           %13     %5      
  %14 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, i32 noundef %12, i32 noundef %13)  %14     %12,%13 
  store i32 3, ptr %2, align 4                                                                      %2      
  br label %15

15:                                               ; preds = %27, %0
  %16 = load i32, ptr %2, align 4                                                           %16     %2      
  %17 = load i32, ptr %3, align 4                                                           %17     %3      
  %18 = icmp sle i32 %16, %17                                                               %18     %16,%17 
  br i1 %18, label %19, label %30                                                                   %18     

19:                                               ; preds = %15
  %20 = load i32, ptr %6, align 4                                                           %20     %6      
  %21 = call i32 (ptr, ...) @printf(ptr noundef @.str.3, i32 noundef %20)                   %21     %20     
  %22 = load i32, ptr %5, align 4                                                           %22     %5      
  store i32 %22, ptr %4, align 4                                                                    %4,%22  
  %23 = load i32, ptr %6, align 4                                                           %23     %6      
  store i32 %23, ptr %5, align 4                                                                    %5,%23  
  %24 = load i32, ptr %4, align 4                                                           %24     %4      
  %25 = load i32, ptr %5, align 4                                                           %25     %5      
  %26 = add nsw i32 %24, %25                                                                %26     %24,%25 
  store i32 %26, ptr %6, align 4                                                                    %6,%26  
  br label %27                                                                                              

27:                                               ; preds = %19
  %28 = load i32, ptr %2, align 4                                                           %28     %2      
  %29 = add nsw i32 %28, 1                                                                  %29     %28     
  store i32 %29, ptr %2, align 4                                                                    %2,%29  
  br label %15, !llvm.loop !5                                                                               

30:                                               ; preds = %15
  ret i32 0                                                                                                 
}

declare i32 @printf(ptr noundef, ...) #1

declare i32 @scanf(ptr noundef, ...) #1

attributes #0 = { noinline nounwind optnone ssp uwtable(sync) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #1 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 1}
!4 = !{!"Homebrew clang version 17.0.6"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
